package com.keepingatimeline.kat;

import android.net.Uri;
import android.support.v7.widget.RecyclerView;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;

import java.io.File;
import java.util.ArrayList;

/**
 * Created by Dana on 5/19/2016.
 * Pretty much everything in this class was copied from online documentation or was automatically
 * generated by Android Studio. -- Dana
 */
public class EventAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> {

    private final ArrayList<Event> eventList;

    // saves off the passed eventList, removing null events from it
    public EventAdapter(ArrayList<Event> eventListParam) {
        this.eventList = eventListParam;
    }

    // Provide a reference to the views for each data item
    // Complex data items may need more than one view per item, and
    // you provide access to all the views for a data item in a view holder
    public static class ViewHolderPhoto extends RecyclerView.ViewHolder {
        // each data item is just a string in this case
        public TextView photoTitle;
        public TextView photoDate;
        public TextView photoText;
        public ImageView photoPhoto;
        public ViewHolderPhoto(View v) {
            super(v);
            photoTitle = (TextView) v.findViewById(R.id.photo_title);
            photoDate = (TextView) v.findViewById(R.id.photo_date);
            photoText = (TextView) v.findViewById(R.id.photo_text);
            photoPhoto = (ImageView) v.findViewById(R.id.photo_photo);
        }
    }

    public static class ViewHolderQuote extends RecyclerView.ViewHolder {
        // each data item is just a string in this case
        public TextView quoteTitle;
        public TextView quoteDate;
        public TextView quoteText;
        public TextView quoteSpeaker;
        public ViewHolderQuote(View v) {
            super(v);
            quoteTitle = (TextView) v.findViewById(R.id.quote_title);
            quoteDate = (TextView) v.findViewById(R.id.quote_date);
            quoteText = (TextView) v.findViewById(R.id.quote_text);
            quoteSpeaker = (TextView) v.findViewById(R.id.quote_speaker);
        }
    }

    public static class ViewHolderText extends RecyclerView.ViewHolder {
        // each data item is just a string in this case
        public TextView textTitle;
        public TextView textDate;
        public TextView textText;
        public ViewHolderText(View v) {
            super(v);
            textTitle = (TextView) v.findViewById(R.id.text_title);
            textDate = (TextView) v.findViewById(R.id.text_date);
            textText = (TextView) v.findViewById(R.id.text_text);
        }
    }

    @Override
    public int getItemViewType(int position){
        switch(eventList.get(position).getType()) {
            case "photo":
                return 0;
            case "quote":
                return 1;
            case "text":
            default:
                return 2;
        }
    }

    @Override
    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
        View itemView;
        RecyclerView.ViewHolder view;
        switch(viewType) {
            case 0:
                itemView = LayoutInflater.from(parent.getContext()).inflate(R.layout.photo_event_layout, parent, false);
                view = new ViewHolderPhoto(itemView);
                break;
            case 1:
                itemView = LayoutInflater.from(parent.getContext()).inflate(R.layout.quote_event_layout, parent, false);
                view = new ViewHolderQuote(itemView);
                break;
            case 2:
            default:
                itemView = LayoutInflater.from(parent.getContext()).inflate(R.layout.text_event_layout, parent, false);
                view = new ViewHolderText(itemView);
                break;
        }

        return view;
    }

    @Override
    public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
        Event event = eventList.get(position);
        switch(event.getType()) {
            case "photo":
                ((ViewHolderPhoto)holder).photoTitle.setText(event.getTitle());
                ((ViewHolderPhoto)holder).photoDate.setText(event.getDate());
                ((ViewHolderPhoto)holder).photoText.setText(event.getString1());
                ((ViewHolderPhoto)holder).photoPhoto.setImageBitmap(BitmapCache.getBitmapFromMemCache(event.getString2()));
                break;
            case "quote":
                ((ViewHolderQuote)holder).quoteTitle.setText(event.getTitle());
                ((ViewHolderQuote)holder).quoteDate.setText(event.getDate());
                ((ViewHolderQuote)holder).quoteText.setText("\"" + event.getString1() + "\"");
                ((ViewHolderQuote)holder).quoteSpeaker.setText("-" + event.getString2());
                break;
            case "text":
            default:
                ((ViewHolderText)holder).textTitle.setText(event.getTitle());
                ((ViewHolderText)holder).textDate.setText(event.getDate());
                ((ViewHolderText)holder).textText.setText(event.getString1());
                break;
        }
    }

    @Override
    public int getItemCount() {
        return eventList.size();
    }
}
